name: Tests

on:
  pull_request:
    branches:
      - main
      - releases/**
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
      - releases/**
    paths-ignore:
      - '**.md'

jobs:
  # Build and unit test
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Determine npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - name: Prettier Format Check
      run: npm run format-check
    - name: ESLint Check
      run: npm run lint
    - name: Build & Test
      run: npm run test

  # End to end save and restore
  test-save:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: 8.10.7
        cabal-version: 3.8.1.0
    - name: Generate files in working directory
      run: |
        mkdir local-archive-uri
        mkdir test-cache
        cd test-cache
        cabal init --lib --overwrite --cabal-version=3.0 --package-name=foo --version=0.1 -n
        cabal configure --write-ghc-environment-files=ghc8.4.4+
        cabal build all --dry-run
    - name: Generate files outside working directory
      run: |
        mkdir ~/test-cache
        cd ~/test-cache
        cabal init --lib --overwrite --cabal-version=3.0 --package-name=foo --version=0.1 -n
        cabal configure --write-ghc-environment-files=ghc8.4.4+
        cabal build all --dry-run
    - name: Save cache
      uses: ./
      with:
        cabal-cache-version: 1.0.5.0
        store-path: ${{ steps.setup-haskell.outputs.cabal-store }}
        archive-uri: local-archive-uri
        path: test-cache
